@model ExpressVoitures.Models.Repair

@{
    ViewData["Title"] = "Créer une réparation";
}

<h1>Créer une réparation</h1>

<h4>Repair</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="CarId" class="control-label"></label>
                <select asp-for="CarId" class="form-control" asp-items="ViewBag.CarId"></select>
                <span asp-validation-for="CarId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Cost" class="control-label"></label>
                <input asp-for="Cost" class="form-control" data-type="currency" />
                <span asp-validation-for="Cost" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Créer" class="btn btn-primary" />
            </div>

        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Retour à la liste</a>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const form = document.querySelector("form");
            form.addEventListener("submit", function (event) {
                const priceInputs = form.querySelectorAll("input[data-type='currency']");
                priceInputs.forEach(function (input) {
                    input.value = input.value.replace(/\s/g, '').replace(',', '.');
                });
            });
        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
